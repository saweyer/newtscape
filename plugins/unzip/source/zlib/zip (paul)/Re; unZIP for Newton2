From: Paul Guyot <pguyot@kallisys.net>To: Steve Weyer <weyer@kagi.com>Date: Sunday, January 7, 2001 11:14 AMSubject: Re: unZIP for NewtonHi Steve,>if indeed there is a zip uncompressor availableYes, there is. There are several compressors and decompressors. Apparently, they're P-Classes.>how would I be able to>access it?We need to find out the API by looking at the ClassInfo function. For the LZippyDecompressor, it is:00389A8C dl       0000000000389A90 dl       0000004800389A94 dl       0000005700389A98 dl       0000006100389A9C dl       0000006000389AA0 dl       0000007400389AA4 b        Sizeof__18TZippyDecompressorSFv_JT [0x01BAB5C8]00389AA8 dl       0000000000389AAC dl       0000000000389AB0 b        New__18TZippyDecompressorFv_JT [0x01BAB5AC]00389AB4 b        Delete__18TZippyDecompressorFv_JT [0x01BAA514]00389AB8 dl       0000000000389ABC dl       0000000000389AC0 dl       0000000000389AC4 b        Lbl_00389AD0; static TZippyDecompressor::ClassInfo()ClassInfo__18TZippyDecompressorSFv:00389AC8 sub      r0, pc, #68 (44)00389ACC mov      pc, lrLbl_00389AD0:00389AD0 mov      r0, #0 (0)00389AD4 mov      pc, lr00389AD8 db       "TZippyDecompressor"00389AEB db       "TDecompressor"00389AF8 dl       0000000000389AFC dl       0000000000389B00 b        ClassInfo__18TZippyDecompressorSFv [0x00389AC8]00389B04 b        New__18TZippyDecompressorFv_JT [0x01BAB5AC]00389B08 b        Delete__18TZippyDecompressorFv_JT [0x01BAA514]00389B0C b        Init__18TZippyDecompressorFPv_JT [0x01BAB584]00389B10 b        Decompress__18TZippyDecompressorFPUlPvUlT2T3_JT [0x01BAA500]The TZippyDecompressor API is therefore:class TZippyDecompressor: public TDecompressor{public:   PROTOCOL_IMPL_HEADER_MACRO( TZippyDecompressor );   TDecompressor*  New( void );		// PROTOCOL constructor   void		  Delete ( void );	// PROTOCOL destructor   UndefRes	  Init( void* );   UndefRes	  Decompress(	unsigned long*,				void*,				unsigned long,				void*,				unsigned long);private:   UndefRes		DecompressChunk(				unsigned long*,				void*,				unsigned long,				void*,				unsigned long );   UndefRes		DecompressedLength(				void*,				unsigned long );   UndefRes		ExpandValue(				unsigned char**,				long*,				unsigned char*,				unsigned long* );   UndefRes		Finish(				void*,				unsigned long );   UndefRes		HeaderSize( void );   UndefRes		InitCache( void );}; // TZippyDecompressorSo, we need to find out how to use Init and Decompress methods. Besides, the TDecompressor interface class isn't defined in the public jump table, and this means we need to define it again. I'm not sure it will work if we do it the official way, but since it is very simple, we could do a little hack.BTW, there is a LZDecompressor, too. (this maybe can be used for GIFs).The interface of the TCompressor interface is much more simple. And the TCompressor interface is in the public Jump Table. This means that we may want to try first to compress some data, export it to a desktop and see what the ZLib can do out of it.>this could be _very_ useful not only for Waba (in case someone>has a compressed .jar, which is basically  just a .zip) but also in general>for downloading files from web.  I already have NS code that parses the .zip>file and finds individual entries, but it only extracts uncompressed>entries.  all I'd need would be a function (same args as BinaryMunger),>where I could pass in something like:>>unzip(uncompressedBinary,0,Length(uncompressedBinary),>compressedBinary,offset,count) );>>where the binaries would usually be VBOs if they're big;>count arg could be nil which would mean length(binary)>>if this worked, then I'd just need to write a little code that displayed an>overview of filenames so user could select which they wanted to extract,>and a little prefs view that set destination/helper for each file extension.>many of these would correspond to existing Newt's Cape helpers, but I'd also>include a few default ones (like Inbox, Notepad, NewtWorks, plus let user>set for any they know about).I think that this decompressor extracts just chunks of data, there is no file in it, like gunzip.BTW, maybe the NS Translate function works. I haven't tried. Sorry, but I focus on the ATA Support for the moment. And working on the compressors require a MP2x00. I hope mine will get back home soon, but Apple doesn't seem to be that hurry.Paul-- http://www.kallisys.com/