// Encoding:NewtsCape// 1.0DefineGlobalConstant('kVersionNum, 		"1.0");DefineGlobalConstant('kVersionInt, 		"10");DefineGlobalConstant('kBetaVersion, 	"c");DefineGlobalConstant('kVersionString,	kVersionNum & kBetaVersion &		(if not kIgnoreNativeKeyword then $N) &		(if kDebugOn then $D) &		(if kProfileOn then $P) &		"-2");Print(kAppName && kVersionString);DefineGlobalConstant('kNewtsCapeSymbol, '|NewtsCape:NewtsCape|);constant kGIFextension	:= ".gif";DefineGlobalConstant('kEmptyGlobal, { // from Newt's Cape 1.6i	cache: [], historyPos: 0,				htmlApps: {}, helperApps: {},	imageExtensions: [kGIFextension],	protos: {},	}); constant kDefaultEncoding	:= 'sjis; // !!!bpartData := {NTEforFORM: func(str)begin	// note: this might create a "empty" pref frame from a saved book?	local prefs := GetAppPrefs(kNewtsCapeSymbol, {}).NTEncoding;//Print(prefs);	local def := NTE_methods:GetPrefsNTEncoding(prefs, kDefaultEncoding);//Print(def);	local bin := NTE_methods:uni2code(str, def, nil);//Print(bin);	if bin	then begin		local INT len := Length(bin), i;//Print(len);		local result := MakeBinary((len+1) * 2, 'string);		for i:=0 to len-1		do //result[i] := CHR(ExtractByte(bin, i));			StuffUniChar(result, i*2, ExtractByte(bin, i));	// !!!d. better if =0		//StuffUniChar(result, len*2, unicodeNUL);		result;		end	else str;	// !!!cend,NTE_protoBasicEndPoint: NTE_protoBasicEndPoint,NTE_protoPrefsRollItem: NTE_protoPrefsRollItem,//NTE_uni2roman:			NTE_uni2roman,};DefineGlobalConstant('kEncodingProtos, []);		// !!!c. for Removescriptforeach slot,val in partDatado AddArraySlot(kEncodingProtos, slot);InstallScript := func(partFrame, removeFrame)begin	local gData := GetGlobalVar(kNewtsCapeSymbol), slot, val, protos;	if not gData	then DefGlobalVar(kNewtsCapeSymbol, gData := EnsureInternal(EnsureInternal(kEmptyGlobal)));	if not protos := gData.protos	then gData.(EnsureInternal('protos)) := protos := {};	foreach slot,val in partFrame.partData	do protos.(EnsureInternal(slot)) := val;end;RemoveScript :=	func(removeFrame)begin	local gData := GetGlobalVar(kNewtsCapeSymbol), protos, slot;	if gData and protos := gData.protos	then foreach slot in kEncodingProtos		 do RemoveSlot(protos, slot);end;